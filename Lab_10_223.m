%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Filename: Lab_10_223.m
% Author: Karmyn VonEhr
% Date: 4/15/2020
% Instructor: Prof. Baine
% Description:  This program models digital communication processes. A
% signal is generated by a provided function and then received and
% interpreted beased on varying levels of noise. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

close all
clc
rng('shuffle');     %seeded random generator 

pulses = 5;
SNR = 50;
p = 0.5;

time = 0:1/20:pulses-1/20;
[binarysig, rsignal] = gen_rdata(pulses,SNR,p);

%%%%%%%%%%%%%%%%%%%% PART I: gen_rdata.m TEST %%%%%%%%%%%%%%%%%%%%%%%%%%%%
figure;
plot(time,rsignal);grid; 
xlabel('Time (s)'); ylabel('Pulse Stream r (V)');
title('r(t) Signal with SNR = 50 dB and Probabiltiy = 0.5');

%%%%%%%%%%%%%%%%%%%% PART II: COMPUTE Theoretical BER %%%%%%%%%%%%%%%%%%%%
SNR = -8:1:10;
snr = 10.^(SNR./10);
BERth = qfunc(sqrt(snr));

%%%%%%%%%%%%%%%%%%%% PART III: Receiver Filtering %%%%%%%%%%%%%%%%%%%%%%%%
pulses =5000;
count = 0;

for i = -8:10
    count = count + 1;
    [binary,signal] = gen_rdata(pulses,i,p);
    bin = received_bin(signal,pulses);
    BERem(count) = BER(bin,binary,pulses);
end

[binary,noisesignal] = gen_rdata(5,-8,p);
figure;
plot(time,noisesignal);grid; 
xlabel('Time (s)'); ylabel('Pulse Stream r (V)');
title('r(t) Signal with SNR = -8 dB and Probabiltiy = 0.5');

X = -8:1:10;
figure;
semilogy(X,BERth, X,BERem);grid; 
xlabel('SNR (dB)'); ylabel('BER');
legend('BER Theoretical', 'BER Empirical');
title("BER vs. SNR for Matched Filter Polar Signaling");


function bin = received_bin(signal,pulses)
signal = reshape(signal,[20 pulses]);
bin = zeros(pulses, 1);
   puls =    [0            % 20 point Gaussian pulse shape
   0.007617389414865       % adjusted for Ep = 1
   0.031455342184539
   0.070092094352314
   0.120328669495781
   0.177475320616964
   0.235843683614484
   0.289387944478742
   0.332414859116208
   0.360269954756471
   0.369907985284340
   0.360269954756471
   0.332414859116208
   0.289387944478742
   0.235843683614484
   0.177475320616964
   0.120328669495781
   0.070092094352314
   0.031455342184539
   0.007617389414865];

pul = repelem(puls,1,pulses);   %makes puls a matrix to match the signal
ep = trapz(signal.* pul);

for i = 1:pulses
    if(ep(i) <= 0)
        bin(i) = 0;             %assigns binary signal received
    else
        bin(i) = 1;
    end
end
end

function BERem = BER(bin,binary,pulses)
    er = sum(bin ~= binary);
    BERem = er / pulses;
end



